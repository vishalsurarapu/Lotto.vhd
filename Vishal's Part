--index is the digit highlighted in lottery number
--lotteryinput is the number displayed in the digit  --- should be passed on to the HEX display
--slv_lotteryinput is the number counter 0-10 -> 0-9:to display numbers -->10:to display a '-'


library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all;

entity e_manualinput is
	port (	slv_SW   : in  std_logic_vector(9 downto 0)
			slv_lotteryinput : out std_logic_vector(4 downto 0)
	);
end entity e_manualinput;

architecture a_manualinput of e_manualinput is


	-- *********IMPORTANT*********
	-- add below to the mother entity
	-- constant n: positive := 5;
	-- type lotteryinput is array (0 to 4) of unsigned(n-1 downto 0);
	-- -- type lotteryinput is array (0 to 4) of unresolved_unsigned(n-1 downto 0);

	-- signal slv_lotteryinput : lotteryinput;
	signal index : natural range 0 to n-1;

begin
	-- set index
	index <= 0;
  
	p_manualinput: process(slv_SW, slv_lotteryinput)
	begin
	  
		-- set non indexed values arbitrarily
		for i in 0 to n-1 loop

		  if i = index then
			if slv_SW(0) = '1' then -- up
			  if(slv_lotteryinput(i) == )
			  slv_lotteryinput(i) <= slv_lotteryinput(i) + 1;
			  --display the output on 7-seg 
			  --pass the signal to FSM for comparisions 
			end if;

			if slv_SW(1) = '1' then -- down
			  slv_lotteryinput(i) <= slv_lotteryinput(i) - 1; 
			  --display the output on 7-seg
			  --pass the signal to FSM for comparisions
			end if;

			if slv_SW(2) = '1' then -- right
			  index <= index + 1;
			  slv_lotteryinput(i) <= slv_lotteryinput(i);
			  --display the output on 7-seg
			  --pass the signal to FSM for comparisions
			end if;

			if slv_SW(3) = '1' then -- left
			  index <= index - 1;
			  slv_lotteryinput(i) <= slv_lotteryinput(i);
			  --display the output on 7-seg
			  --pass the signal to FSM for comparisions
			end if;

			if slv_SW(4) = '1' then -- enter
			index <= 0;
			  slv_lotteryinput(i) <= slv_lotteryinput(i);
			  --display the output on 7-seg
			  --pass the signal to FSM for comparisions
			end if;
		  else
			  slv_lotteryinput(i) <= (others => '0');
		  end if;

		end loop;
	end process p_manualinput;

end architecture a_manualinput;
	
